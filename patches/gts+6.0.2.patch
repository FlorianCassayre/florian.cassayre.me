diff --git a/node_modules/gts/build/src/cli.d.ts b/node_modules/gts/build/src/cli.d.ts
index 2ec4963..3a751f7 100644
--- a/node_modules/gts/build/src/cli.d.ts
+++ b/node_modules/gts/build/src/cli.d.ts
@@ -27,6 +27,7 @@ export interface Options {
     no: boolean;
     logger: Logger;
     yarn?: boolean;
+    cache?: boolean;
 }
 export type VerbFilesFunction = (options: Options, files: string[], fix?: boolean) => Promise<boolean>;
 /**
diff --git a/node_modules/gts/build/src/cli.js b/node_modules/gts/build/src/cli.js
index 61fbb02..1e0cab5 100755
--- a/node_modules/gts/build/src/cli.js
+++ b/node_modules/gts/build/src/cli.js
@@ -43,6 +43,7 @@ const cli = meow({
     -n, --no      Assume a no answer for every prompt.
     --dry-run     Don't make any actual changes.
     --yarn        Use yarn instead of npm.
+    --cache       Only check changed files.
 
 	Examples
     $ gts init -y
@@ -56,6 +57,7 @@ const cli = meow({
         no: { type: 'boolean', alias: 'n' },
         dryRun: { type: 'boolean' },
         yarn: { type: 'boolean' },
+        cache: { type: 'boolean' },
     },
 });
 /**
@@ -90,6 +92,7 @@ async function run(verb, files) {
         no: cli.flags.no || cli.flags.n || false,
         logger,
         yarn: cli.flags.yarn || (0, util_1.isYarnUsed)(),
+        cache: cli.flags.cache || false,
     };
     // Linting/formatting depend on typescript. We don't want to load the
     // typescript module during init, since it might not exist.
@@ -101,6 +104,11 @@ async function run(verb, files) {
     if (flags.length === 0) {
         flags.push('**/*.ts', '**/*.js', '**/*.tsx', '**/*.jsx', '--no-error-on-unmatched-pattern');
     }
+
+    if (options.cache) {
+      flags.push('--cache');
+    }
+
     switch (verb) {
         case 'lint':
         case 'check': {
